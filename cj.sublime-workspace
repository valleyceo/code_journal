{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Fa",
				"FArrDen"
			],
			[
				"interact",
				"interactive_runner"
			],
			[
				"player",
				"playerPSum"
			],
			[
				"Get",
				"GetMax"
			],
			[
				"Rever",
				"ReverseSortCount"
			],
			[
				"closes",
				"closest_to_last_word_"
			],
			[
				"max_avail",
				"max_available"
			],
			[
				"emplace",
				"emplace"
			],
			[
				"empla",
				"emplace_back"
			],
			[
				"vertex",
				"vertex_map"
			],
			[
				"Graph",
				"GraphVertex"
			],
			[
				"has",
				"HasCycle"
			],
			[
				"board",
				"board_ptr"
			],
			[
				"SearchM",
				"SearchMazeHelper"
			],
			[
				"unordereD",
				"unordered_set"
			],
			[
				"unordere",
				"unordered_map"
			],
			[
				"candidate",
				"candidate_count"
			],
			[
				"const",
				"const_iterator"
			],
			[
				"task",
				"task_durations"
			],
			[
				"minimum",
				"minimum_messiness"
			],
			[
				"numre",
				"num_remaining_blanks"
			],
			[
				"numberofways",
				"number_of_ways_to_h_ptr"
			],
			[
				"maximum_rev",
				"maximum_revenue_for_range"
			],
			[
				"maximumrefe",
				"maximum_revenue_for_range_ptr"
			],
			[
				"maximumre",
				"maximum_revenue_for_range_ptr"
			],
			[
				"maximum_reven",
				"maximum_revenue_for_range_ptr"
			],
			[
				"Ispatt",
				"IsPatternSuffixContainedStartingAtXY"
			],
			[
				"xchoo",
				"x_choose_y_ptr"
			],
			[
				"x_choo",
				"x_choose_y"
			],
			[
				"x_choose",
				"x_choose_y_ptr"
			],
			[
				"numberof",
				"number_of_ways_ptr"
			],
			[
				"Gray",
				"GrayCode"
			],
			[
				"partial_assi",
				"partial_assignment"
			],
			[
				"num_ri",
				"num_right_parens_needed"
			],
			[
				"input",
				"input_set"
			],
			[
				"Generate",
				"GeneratePowerSet"
			],
			[
				"client",
				"client_id"
			],
			[
				"possible_anc_o",
				"possible_anc_or_desc_0"
			],
			[
				"BuildMinHeightBSTFromSorte",
				"BuildMinHeightBSTFromSortedSubArray"
			],
			[
				"sorted",
				"sorted_arrays"
			],
			[
				"reubild",
				"RebuildBSTFromPreorderOnValueRange"
			],
			[
				"RebuildBst",
				"RebuildBSTFromPreorderOnValueRange"
			],
			[
				"root_idx",
				"root_idx_ptr"
			],
			[
				"Rebuild",
				"RebuildBSTFromPreorderOnValueRange"
			],
			[
				"RebuildBSTFro",
				"REbuildBSTFromPreorderHelper"
			],
			[
				"Search",
				"SearchBST"
			],
			[
				"adjuste",
				"adjusted_people"
			],
			[
				"adjusted",
				"adjusted_salary_sum"
			],
			[
				"age_to",
				"age_to_count"
			],
			[
				"unordered",
				"unordered_set"
			],
			[
				"parag",
				"paragraph_end"
			],
			[
				"shortes",
				"shortest_distance"
			],
			[
				"keyword_to",
				"keyword_to_idx"
			],
			[
				"keywor",
				"keywords"
			],
			[
				"char",
				"chars_with_odd_frequency"
			],
			[
				"stream_be",
				"stream_begin_copy"
			],
			[
				"global_",
				"global_max"
			],
			[
				"global",
				"global_min"
			],
			[
				"Studn",
				"students"
			],
			[
				"candidate_",
				"candidate_max_heap"
			],
			[
				"candida",
				"candidate_idx"
			],
			[
				"emplac",
				"emplace"
			],
			[
				"sequen",
				"sequence_end"
			],
			[
				"sequenc",
				"sequence_end"
			],
			[
				"exteriro",
				"exterior_ptr"
			],
			[
				"ReconstructPreo",
				"ReconstructPreorderHelper"
			],
			[
				"Reconstructpre",
				"ReconstructPreorderHelper"
			],
			[
				"BinaryTreeFrom",
				"BinaryTreeFromPreorderInorderHelper"
			],
			[
				"preorder",
				"preorder_start"
			],
			[
				"BinaryTreeFromP",
				"BinaryTreeNodeFromPreorderInorderHelper"
			],
			[
				"Binary",
				"BinaryTreeNode"
			],
			[
				"unique",
				"unique_ptr"
			],
			[
				"sum",
				"SumRootToLeafHelper"
			],
			[
				"SumRoo",
				"SumRootToLeafHelper"
			],
			[
				"par",
				"partial_path_sum"
			],
			[
				"uni",
				"unique_ptr"
			],
			[
				"num",
				"num_queue_elements"
			],
			[
				"second",
				"second_half_iter"
			],
			[
				"square_",
				"square_matrix_"
			],
			[
				"uniform",
				"uniform_0_1"
			],
			[
				"i",
				"i"
			],
			[
				"print",
				"print_waffle"
			],
			[
				"CONTROL",
				"CONTROL_RATE"
			],
			[
				"traffic_light",
				"traffic_light_idx"
			],
			[
				"car_pos",
				"car_position_y"
			],
			[
				"y",
				"y"
			],
			[
				"end_p",
				"end_path_s"
			],
			[
				"target_",
				"target_y"
			],
			[
				"prev",
				"previous_path_x"
			],
			[
				"map_",
				"map_waypoints_y"
			],
			[
				"map_way",
				"map_waypoints_x"
			],
			[
				"ref_y",
				"ref_y_prev"
			],
			[
				"previous_path_",
				"previous_path_x"
			],
			[
				"previous",
				"previous_path_y"
			],
			[
				"landmark",
				"landmark_in"
			],
			[
				"wei",
				"weights"
			],
			[
				"time",
				"previous_timestamp_"
			],
			[
				"blan",
				"blank_spaces_len"
			],
			[
				"maze",
				"mazeDistance"
			],
			[
				"succ",
				"successors_sorted"
			],
			[
				"cost",
				"cost"
			],
			[
				"get",
				"getStartState"
			]
		]
	},
	"buffers":
	[
		{
			"file": "1. Problems/2. Array/a. 1D - Sum - Maxiumum Product Subarray.py",
			"settings":
			{
				"buffer_size": 1081,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "a. 1D - Sum - Maxiumum Product Subarray"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "a."
					},
					"AgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": " 1D"
					},
					"AwAAAAIAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAAUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": " -"
					},
					"AgAAAAUAAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAAAHAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQAAAAAAAAAFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": " Sum"
					},
					"BAAAAAcAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAACwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABwAAAAAAAAAHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"left_delete",
					null,
					"AQAAAAoAAAAAAAAACgAAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAACwAAAAAAAAALAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "m"
					},
					"AQAAAAoAAAAAAAAACwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACgAAAAAAAAAKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": " -"
					},
					"AgAAAAsAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAANAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACwAAAAAAAAALAAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": " Maxiu"
					},
					"BgAAAA0AAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAPAAAAAAAAAAAAAAAPAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAEQAAAAAAAAAAAAAAEQAAAAAAAAASAAAAAAAAAAAAAAASAAAAAAAAABMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADQAAAAAAAAANAAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "mum"
					},
					"AwAAABMAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAVAAAAAAAAAAAAAAAVAAAAAAAAABYAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEwAAAAAAAAATAAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": " Product"
					},
					"CAAAABYAAAAAAAAAFwAAAAAAAAAAAAAAFwAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABkAAAAAAAAAAAAAABkAAAAAAAAAGgAAAAAAAAAAAAAAGgAAAAAAAAAbAAAAAAAAAAAAAAAbAAAAAAAAABwAAAAAAAAAAAAAABwAAAAAAAAAHQAAAAAAAAAAAAAAHQAAAAAAAAAeAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFgAAAAAAAAAWAAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": " Subarray"
					},
					"CQAAAB4AAAAAAAAAHwAAAAAAAAAAAAAAHwAAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAACEAAAAAAAAAAAAAACEAAAAAAAAAIgAAAAAAAAAAAAAAIgAAAAAAAAAjAAAAAAAAAAAAAAAjAAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAJQAAAAAAAAAAAAAAJQAAAAAAAAAmAAAAAAAAAAAAAAAmAAAAAAAAACcAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHgAAAAAAAAAeAAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAABAAAAAAAAACcAAABhLiAxRCAtIFN1bSAtIE1heGl1bXVtIFByb2R1Y3QgU3ViYXJyYXk",
					"AQAAAAAAAAABAAAAJwAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": " LC"
					},
					"AwAAAAEAAAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAAQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAQAAAAAAAAABQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"paste",
					null,
					"AQAAAAUAAAAAAAAAIgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQAAAAAAAAAFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAACIAAAAAAAAAIwAAAAAAAAAAAAAAIwAAAAAAAAAkAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIgAAAAAAAAAiAAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAACQAAAAAAAAAJgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJAAAAAAAAAAkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAACYAAAAAAAAAJwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJgAAAAAAAAAmAAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAACcAAAAAAAAAKAAAAAAAAAAAAAAAKAAAAAAAAAApAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwAAAAAAAAAnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAACkAAAAAAAAAKwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKQAAAAAAAAApAAAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAACsAAAAAAAAALAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKwAAAAAAAAArAAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"paste",
					null,
					"AQAAACgAAAAAAAAApAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKAAAAAAAAAAoAAAAAAAAAAAAAAAAADVA"
				],
				[
					34,
					1,
					"left_delete",
					null,
					"AQAAADYBAAAAAAAANgEAAAAAAAADAAAACiAK",
					"AQAAAAAAAAABAAAAOQEAAAAAAAA2AQAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJMBAAAAAAAAlAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkwEAAAAAAACTAQAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					2,
					"left_delete",
					null,
					"AgAAAAwCAAAAAAAADAIAAAAAAAABAAAACgsCAAAAAAAACwIAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAADQIAAAAAAAAMAgAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAKQCAAAAAAAApQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApAIAAAAAAACkAgAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"paste",
					null,
					"AQAAAKUCAAAAAAAAxwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApQIAAAAAAAClAgAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"paste",
					null,
					"AgAAAOcCAAAAAAAAOQQAAAAAAAAAAAAAOQQAAAAAAAA5BAAAAAAAAOABAAAgICAgICAgIG1pblZhbCA9IDEKICAgICAgICBtYXhWYWwgPSAxCiAgICAgICAgcmVzID0gLXN5cy5tYXhzaXplCiAgICAgICAgCiAgICAgICAgZm9yIG4gaW4gbnVtczoKICAgICAgICAgICAgaWYgbiA9PSAwOgogICAgICAgICAgICAgICAgbWluVmFsID0gMQogICAgICAgICAgICAgICAgbWF4VmFsID0gMQogICAgICAgICAgICAgICAgcmVzID0gbWF4KHJlcywgMCkKICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgbmV3TWF4ID0gbWF4KFttYXhWYWwgKiBuLCBtaW5WYWwgKiBuLCBuXSkKICAgICAgICAgICAgbmV3TWluID0gbWluKFttaW5WYWwgKiBuLCBtYXhWYWwgKiBuLCBuXSkKICAgICAgICAgICAgbWF4VmFsID0gbmV3TWF4CiAgICAgICAgICAgIG1pblZhbCA9IG5ld01pbgogICAgICAgICAgICByZXMgPSBtYXgocmVzLCBtYXhWYWwpCiAgICAgICAgICAgIAogICAgICAgIHJldHVybiByZXM",
					"AQAAAAAAAAABAAAAxwQAAAAAAADnAgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "1. Problems/4. Trees/a. Binary Tree - Traversal - Convert BST to Sorted Doubly LL.py",
			"settings":
			{
				"buffer_size": 1955,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAEAAAAAAAAAAgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAAAIAAAAAAAAAAwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"left_delete",
					null,
					"AQAAAAIAAAAAAAAAAgAAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAAwAAAAAAAAADAAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "LC"
					},
					"AgAAAAIAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAAEAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAQAAAAAAAAABQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAABgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQAAAAAAAAAFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					6,
					"left_delete",
					null,
					"BgAAAAoAAAAAAAAACgAAAAAAAAABAAAAIAkAAAAAAAAACQAAAAAAAAABAAAAQwgAAAAAAAAACAAAAAAAAAABAAAATAcAAAAAAAAABwAAAAAAAAABAAAAIAYAAAAAAAAABgAAAAAAAAABAAAAIwUAAAAAAAAABQAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAACwAAAAAAAAALAAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"paste",
					null,
					"AQAAAAUAAAAAAAAAQQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQAAAAAAAAAFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAEEAAAAAAAAAQgAAAAAAAAAAAAAAQgAAAAAAAABDAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQQAAAAAAAABBAAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAEMAAAAAAAAARQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwAAAAAAAABDAAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAAEUAAAAAAAAARgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQAAAAAAAABFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAEYAAAAAAAAARwAAAAAAAAAAAAAARwAAAAAAAABIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARgAAAAAAAABGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAEgAAAAAAAAASgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAAAAAAAAABIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAAEoAAAAAAAAASwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgAAAAAAAABKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"paste",
					null,
					"AQAAAEcAAAAAAAAAYAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwAAAAAAAABHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					2,
					"left_delete",
					null,
					"AgAAANUDAAAAAAAA1QMAAAAAAAABAAAACtQDAAAAAAAA1AMAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA1gMAAAAAAADWAwAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"left_delete",
					null,
					"AQAAAMUCAAAAAAAAxQIAAAAAAAACAAAACgo",
					"AQAAAAAAAAABAAAAxwIAAAAAAADFAgAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"left_delete",
					null,
					"AQAAALYCAAAAAAAAtgIAAAAAAAADAAAACiAK",
					"AQAAAAAAAAABAAAAuQIAAAAAAAC2AgAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"left_delete",
					null,
					"AQAAAN0CAAAAAAAA3QIAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA3gIAAAAAAADdAgAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAFgEAAAAAAAAWQQAAAAAAAAAAAAAWQQAAAAAAABaBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWAQAAAAAAABYBAAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"paste",
					null,
					"AQAAAFoEAAAAAAAA/QQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWgQAAAAAAABaBAAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAAEFAAAAAAAAAgUAAAAAAAAAAAAAAgUAAAAAAAADBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQUAAAAAAAABBQAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"paste",
					null,
					"AQAAAAMFAAAAAAAApAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwUAAAAAAAADBQAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"left_delete",
					null,
					"AQAAAAEFAAAAAAAAAQUAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAAgUAAAAAAAACBQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "1. Problems/9. Design/a. Stack - Design Browser History.py",
			"settings":
			{
				"buffer_size": 3508,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": " L"
					},
					"AgAAAAEAAAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAADAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAMAAAAAAAAABAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwAAAAAAAAADAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"left_delete",
					null,
					"AQAAAAMAAAAAAAAAAwAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "C"
					},
					"AQAAAAMAAAAAAAAABAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwAAAAAAAAADAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAQAAAAAAAAABQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"paste",
					null,
					"AQAAAAUAAAAAAAAAIgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQAAAAAAAAAFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAACIAAAAAAAAAIwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIgAAAAAAAAAiAAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAACMAAAAAAAAAJQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIwAAAAAAAAAjAAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAACUAAAAAAAAAJgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQAAAAAAAAAlAAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAACYAAAAAAAAAJwAAAAAAAAAAAAAAJwAAAAAAAAAoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJgAAAAAAAAAmAAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAACgAAAAAAAAAKgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKAAAAAAAAAAoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAACoAAAAAAAAAKwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKgAAAAAAAAAqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"paste",
					null,
					"AQAAACcAAAAAAAAATAoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwAAAAAAAAAnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					2,
					"left_delete",
					null,
					"AgAAAH0JAAAAAAAAfQkAAAAAAAABAAAACnwJAAAAAAAAfAkAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAfgkAAAAAAAB+CQAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					2,
					"left_delete",
					null,
					"AgAAAGQDAAAAAAAAZAMAAAAAAAABAAAACmMDAAAAAAAAYwMAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAZQMAAAAAAABlAwAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAEwKAAAAAAAATQoAAAAAAAAAAAAATQoAAAAAAABOCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAoAAAAAAABMCgAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"paste",
					null,
					"AQAAAE4KAAAAAAAAtA0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATgoAAAAAAABOCgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "1. Problems/9. Design/0. Ordering.md",
			"settings":
			{
				"buffer_size": 25,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "1."
					},
					"AgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": " stack"
					},
					"BgAAAAIAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAAgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": "\n2."
					},
					"AwAAAAgAAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAKAAAAAAAAAAAAAAAKAAAAAAAAAAsAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAAAAAAAAAAIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAsAAAAAAAAADAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACwAAAAAAAAALAAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "T"
					},
					"AQAAAAwAAAAAAAAADQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADAAAAAAAAAAMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"left_delete",
					null,
					"AQAAAAwAAAAAAAAADAAAAAAAAAABAAAAVA",
					"AQAAAAAAAAABAAAADQAAAAAAAAANAAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "tree"
					},
					"BAAAAAwAAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAAAEAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADAAAAAAAAAAMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					4,
					"left_delete",
					null,
					"BAAAAA8AAAAAAAAADwAAAAAAAAABAAAAZQ4AAAAAAAAADgAAAAAAAAABAAAAZQ0AAAAAAAAADQAAAAAAAAABAAAAcgwAAAAAAAAADAAAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "graph"
					},
					"BQAAAAwAAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAARAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADAAAAAAAAAAMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "\n2."
					},
					"AwAAAAgAAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAKAAAAAAAAAAAAAAAKAAAAAAAAAAsAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAAAAAAAAAAIAAAAAAAAAAAAAAAAAExA"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": " T"
					},
					"AgAAAAsAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAANAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACwAAAAAAAAALAAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"left_delete",
					null,
					"AQAAAAwAAAAAAAAADAAAAAAAAAABAAAAVA",
					"AQAAAAAAAAABAAAADQAAAAAAAAANAAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "tree"
					},
					"BAAAAAwAAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAAAEAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADAAAAAAAAAAMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"left_delete",
					null,
					"AQAAABEAAAAAAAAAEQAAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAAEgAAAAAAAAASAAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAABEAAAAAAAAAEgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQAAAAAAAAARAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "1. Problems/2. Array/1_Island_Perimeter.cpp",
			"settings":
			{
				"buffer_size": 1458,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					11,
					2,
					"left_delete",
					null,
					"AgAAALMFAAAAAAAAswUAAAAAAABJAwAACi8vIEFsdGVybmF0ZSAoaWYgdGhlcmUgYXJlIG1vcmUgMXMgdGhpcyBjb3VsZCBiZSBmYXN0ZXIpCmNsYXNzIFNvbHV0aW9uIHsKcHVibGljOgogICAgaW50IGlzbGFuZFBlcmltZXRlcih2ZWN0b3I8dmVjdG9yPGludD4+JiBncmlkKSB7CiAgICAgICAgaWYgKGdyaWQuc2l6ZSgpID09IDAgfHwgZ3JpZFswXS5zaXplKCkgPT0gMCkKICAgICAgICAgICAgcmV0dXJuIDA7CiAgICAgICAgCiAgICAgICAgaW50IGN0ID0gMDsKICAgICAgICBmb3IgKGludCBpID0gMDsgaSA8IGdyaWQuc2l6ZSgpOyBpKyspIHsKICAgICAgICAgICAgZm9yIChpbnQgaiA9IDA7IGogPCBncmlkWzBdLnNpemUoKTsgaisrKSB7CiAgICAgICAgICAgICAgICAvLyBlZGdlcwogICAgICAgICAgICAgICAgaWYgKGkgPT0gMCAmJiBncmlkW2ldW2pdID09IDEpIGN0Kys7CiAgICAgICAgICAgICAgICBpZiAoaiA9PSAwICYmIGdyaWRbaV1bal0gPT0gMSkgY3QrKzsKICAgICAgICAgICAgICAgIGlmIChpID09IGdyaWQuc2l6ZSgpLTEgJiYgZ3JpZFtpXVtqXSA9PSAxKSBjdCsrOwogICAgICAgICAgICAgICAgaWYgKGogPT0gZ3JpZFswXS5zaXplKCktMSAmJiBncmlkW2ldW2pdID09IDEpIGN0Kys7CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIC8vIG5vbiBlZGdlcwogICAgICAgICAgICAgICAgaWYgKGkgIT0gMCAmJiBncmlkW2ldW2pdICE9IGdyaWRbaS0xXVtqXSkgY3QrKzsKICAgICAgICAgICAgICAgIGlmIChqICE9IDAgJiYgZ3JpZFtpXVtqXSAhPSBncmlkW2ldW2otMV0pIGN0Kys7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgCiAgICAgICAgcmV0dXJuIGN0OwogICAgfQp9O7IFAAAAAAAAsgUAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAswUAAAAAAAD8CAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "// LC 1337. The K Weakest Rows in a Matrix\n\n/*\nGiven a m * n matrix mat of ones (representing soldiers) and zeros (representing civilians), return the indexes of the k weakest rows in the matrix ordered from the weakest to the strongest.\n\nA row i is weaker than row j, if the number of soldiers in row i is less than the number of soldiers in row j, or they have the same number of soldiers but i is less than j. Soldiers are always stand in the frontier of a row, that is, always ones may appear first and then zeros.\n\n \n\nExample 1:\n\nInput: mat = \n[[1,1,0,0,0],\n [1,1,1,1,0],\n [1,0,0,0,0],\n [1,1,0,0,0],\n [1,1,1,1,1]], \nk = 3\nOutput: [2,0,3]\nExplanation: \nThe number of soldiers for each row is: \nrow 0 -> 2 \nrow 1 -> 4 \nrow 2 -> 1 \nrow 3 -> 2 \nrow 4 -> 5 \nRows ordered from the weakest to the strongest are [2,0,3,1,4]\nExample 2:\n\nInput: mat = \n[[1,0,0,0],\n [1,1,1,1],\n [1,0,0,0],\n [1,0,0,0]], \nk = 2\nOutput: [0,2]\nExplanation: \nThe number of soldiers for each row is: \nrow 0 -> 1 \nrow 1 -> 4 \nrow 2 -> 1 \nrow 3 -> 1 \nRows ordered from the weakest to the strongest are [0,2,3,1]\n*/\n\n// my solution - O(N^2) time complexity,  O(k) space complexity, Optimal\ntypedef pair<int, int> pi;\n\nclass Solution {\npublic:\n    vector<int> kWeakestRows(vector<vector<int>>& mat, int k) {\n        priority_queue<pi, vector<pi>, greater<pi> > pq;\n        vector<int> res;\n                \n        for (int i = 0; i < mat.size(); ++i) {\n            int ct = 0;\n            for (int j = 0; j < mat[i].size(); ++j) {\n                if (mat[i][j] == 0)\n                    break;\n                \n                ct++;\n            }\n            \n            pq.push(make_pair(ct, i));\n        }\n        \n        while (!pq.empty() && k--) {\n            res.push_back(pq.top().second);\n            pq.pop();\n        }\n        \n        return res;\n    }\n};",
			"file": "1. Problems/2. Array/1_K_Weakest_Rows_in_Matrix.cpp",
			"file_size": 1828,
			"file_write_time": 132886647725484971,
			"settings":
			{
				"buffer_size": 1836,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					9,
					1,
					"insert",
					{
						"characters": "„"
					},
					"AQAAAEwFAAAAAAAATQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAUAAAAAAABMBQAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"right_delete",
					null,
					"AQAAAE0FAAAAAAAATQUAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAATQUAAAAAAABNBQAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"left_delete",
					null,
					"AQAAAEwFAAAAAAAATAUAAAAAAAADAAAA4oCe",
					"AQAAAAAAAAABAAAATQUAAAAAAABNBQAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEwFAAAAAAAATQUAAAAAAAAAAAAATQUAAAAAAABVBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAUAAAAAAABMBQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "readme.md",
			"settings":
			{
				"buffer_size": 15361,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					7,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAACjAAAAAAAAAKMAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB9DAAAIyBDb2RlIEpvdXJuYWwKClBsZWFzZSBmZWVsIGZyZWUgdG8gbG9vayB1cCBwcm9ibGVtIHNvbHV0aW9ucyBvciBidWlsZCB5b3VyIG93biBjb2RlIGpvdXJuYWwgdXNpbmcgdGhpcyBmb3JtYXQKCmBgYCAgCi4vMi4gTm90ZXMvCnwtLSAxLiBUZW1wbGF0ZXMKfCAgIHwtLSBiYWNrdHJhY2tpbmcKfCAgIHwtLSBkZWJ1Zwp8ICAgfCAgIGAtLSBwcmludE1hdC5jcHAKfCAgIHwtLSBkZXNpZ24KfCAgIHwgICB8LS0gTFJVIENhY2hlIChBbGdvKS5weQp8ICAgfCAgIHwtLSBMUlVfQ2FjaGUucHkKfCAgIHwgICB8LS0gZ2VuZXJhdG9yLnB5CnwgICB8ICAgYC0tIGl0ZXJhdG9yLnB5CnwgICB8LS0gZHAmaGFzaAp8ICAgfCAgIHwtLSAwMWtuYXBzYWNrLmNwcAp8ICAgfCAgIHwtLSBhLiAxRCAtIE1heGltdW0gTGVuZ3RoIG9mIFJlcGVhdGVkIFN1YmFycmF5LnB5CnwgICB8ICAgfC0tIGhhc2htYXAucHkKfCAgIHwgICB8LS0gaGFzaHNldC5weQp8ICAgfCAgIGAtLSBrbmFwc2Fjay5jcHAKfCAgIHwtLSBncmFwaAp8ICAgfCAgIHwtLSBVbmlvbiBGaW5kIC0gQ3ljbGUgRGV0ZWN0aW9uLnB5CnwgICB8ICAgfC0tIGEuIFVuaW9uRmluZCAxLnB5CnwgICB8ICAgfC0tIGEuIFVuaW9uRmluZCAyIC0gUXVpY2sgRmluZC5weQp8ICAgfCAgIHwtLSBhLiBVbmlvbkZpbmQgMyAtIFJhbmsucHkKfCAgIHwgICB8LS0gYS4gVW5pb25GaW5kIDQgLSBQYXRoIENvbXByZXNzaW9uIFJhbmsucHkKfCAgIHwgICB8LS0gYi4gR3JhcGhTZWFyY2ggMiAtIERGUyAtIENsb25lIGEgZ3JhcGgucHkKfCAgIHwgICB8LS0gYi4gR3JhcGhTZWFyY2ggMyAtIERpamtzdHJhLnB5CnwgICB8ICAgfC0tIGIuIEdyYXBoU2VhcmNoIDQgLSBCZWxsbWFuIEZvcmQucHkKfCAgIHwgICB8LS0gZGV0ZWN0X2N5Y2xlLnB5CnwgICB8ICAgfC0tIGRpc2pvaW50X3NldC5weQp8ICAgfCAgIHwtLSBlLiBUb3BvU29ydCAxIC0gREZTLnB5CnwgICB8ICAgfC0tIGUuIFRvcG9zb3J0IDIgLSBCRlMucHkKfCAgIHwgICB8LS0gZXVsZXJpYW5fY2lyY3VpdC5jcHAKfCAgIHwgICB8LS0gZmxvb2RfZmlsbC5jcHAKfCAgIHwgICB8LS0gZmxveWQtd2Fyc2hhbGwuY3BwCnwgICB8ICAgfC0tIGdyYXBoX3JlcHJlc2VudGF0aW9uLmNwcAp8ICAgfCAgIHwtLSBpbk9yZGVyVHJhdmVyc2FsX3N0YWNrLnB5CnwgICB8ICAgfC0tIGtydXNrYWxfbWluaW11bV9zcGFubmluZ190cmVlLnB5CnwgICB8ICAgfC0tIHByaW0ucHkKfCAgIHwgICB8LS0gc3BmYS5jcHAKfCAgIHwgICBgLS0gdG9wb2xvZ2ljYWxfc29ydC5jcHAKfCAgIHwtLSBsaW5rZWRfbGlzdAp8ICAgfCAgIHwtLSBEb3VibHkgTGlua2VkIExpc3QucHkKfCAgIHwgICB8LS0gTGlua2VkIExpc3QucHkKfCAgIHwgICB8LS0gTm9kZS5jcHAKfCAgIHwgICB8LS0gTm9kZS5weQp8ICAgfCAgIHwtLSBSYWRpeCBTb3J0LnB5CnwgICB8ICAgYC0tIFJldmVyc2UgTGlua2VkIExpc3QucHkKfCAgIHwtLSBtYXRoCnwgICB8ICAgfC0tIFByb2JhYmlsaXR5LmNwcAp8ICAgfCAgIHwtLSBhLiBLYXJhdHN1YmEgLSBNdWx0aXBseSBUd28gTGFyZ2UgTnVtYmVycy5weQp8ICAgfCAgIHwtLSBiaW5hcnlFeHBvbmVudGlhbC5jcHAKfCAgIHwgICB8LS0gYmlub21pYWxDb2VmZmljaWVudC5jcHAKfCAgIHwgICB8LS0gYmlub21pYWxDb2VmZmljaWVudC5weQp8ICAgfCAgIHwtLSBjYXRhbGFuLnB5CnwgICB8ICAgfC0tIGNvbWJpbmF0aW9uLmNwcAp8ICAgfCAgIHwtLSBmYWN0b3JpYWxNb2QuY3BwCnwgICB8ICAgfC0tIGdjZC5weQp8ICAgfCAgIHwtLSBpc1ByaW1lLmNwcAp8ICAgfCAgIHwtLSBsY20uY3BwCnwgICB8ICAgfC0tIG1Ub1Rlbi5jcHAKfCAgIHwgICB8LS0gcG93ZXJNb2R1bHVzLmNwcAp8ICAgfCAgIHwtLSBwcmltZUZhY3Rvci5jcHAKfCAgIHwgICBgLS0gdGVuVG9NLmNwcAp8ICAgfC0tIHByaW1pdGl2ZXMKfCAgIHwgICB8LS0gMV9OdW1iZXJfb2ZfMV9CaXRzLmNwcAp8ICAgfCAgIGAtLSBjb3VudEJpdHMuY3BwCnwgICB8LS0gc2VhcmNoCnwgICB8ICAgfC0tIEJpbmFyeV9TZWFyY2guY3BwCnwgICB8ICAgYC0tIEJpbmFyeV9TZWFyY2gucHkKfCAgIHwtLSBzb3J0aW5nCnwgICB8ICAgfC0tIEJhZF9Tb3J0ZXJzLmNwcAp8ICAgfCAgIHwtLSBIZWFwX1NvcnQuY3BwCnwgICB8ICAgfC0tIE1lcmdlIFNvcnQucHkKfCAgIHwgICB8LS0gTWVyZ2VTb3J0LnB5CnwgICB8ICAgfC0tIE1lcmdlU29ydF9JbnBsYWNlLnB5CnwgICB8ICAgfC0tIE1lcmdlX1NvcnQuY3BwCnwgICB8ICAgfC0tIFF1aWNrU29ydC5jcHAKfCAgIHwgICBgLS0gUXVpY2tTb3J0LnB5CnwgICB8LS0gc3RhY2tzJnF1ZXVlcwp8ICAgfCAgIHwtLSAyX01heF9OdW1iZXJfb2ZfRWF0ZW5fQXBwbGVzLnB5CnwgICB8ICAgfC0tIFJQTi5jcHAKfCAgIHwgICB8LS0gYnJhY2tldENoZWNrLmNwcAp8ICAgfCAgIHwtLSBoZWFwLnB5CnwgICB8ICAgfC0tIHF1ZXVlLmNwcAp8ICAgfCAgIGAtLSBzdGFja193aXRoX21heC5jcHAKfCAgIHwtLSBzdHJpbmcmYXJyYXkKfCAgIHwgICB8LS0gbGNzLmNwcAp8ICAgfCAgIHwtLSBsaWNzLmNwcAp8ICAgfCAgIHwtLSBtYXhpbXVtX3N1Ym1hdHJpeC5jcHAKfCAgIHwgICBgLS0gcmV2ZXJzZVdvcmQuY3BwCnwgICBgLS0gdHJlZQp8ICAgICAgIHwtLSBFLiBUcmllIC0gU3VmZml4IFRyaWUucHkKfCAgICAgICB8LS0gRS4gVHJpZS5weQp8ICAgICAgIHwtLSBiaW5hcnlUcmVlX0lub3JkZXJfU3RhY2sucHkKfCAgICAgICB8LS0gYmluYXJ5VHJlZV9JdGVyYXRvci5weQp8ICAgICAgIHwtLSBiaW5hcnlUcmVlX05vZGUucHkKfCAgICAgICB8LS0gYmluYXJ5VHJlZV9UcmF2ZXJzZV9SZWN1cnNpdmVfQXJyYXkuY3BwCnwgICAgICAgfC0tIGJpbmFyeVRyZWVfVHJhdmVyc2VfU3RhY2suY3BwCnwgICAgICAgfC0tIGJpbmFyeVRyZWVfZGVsZXRlTm9kZS5weQp8ICAgICAgIHwtLSBiaW5hcnlUcmVlX2RlcHRoX3dpZHRoLmNwcAp8ICAgICAgIHwtLSBjLiBIZWFwIDEucHkKfCAgICAgICB8LS0gYy4gSGVhcCAyIC0gSGVhcCBTb3J0LnB5CnwgICAgICAgfC0tIGMuIEhlYXAgMyAtIGt0aCBMYXJnZXN0LnB5CnwgICAgICAgfC0tIG1pbl9zcGFubmluZ190cmVlLmNwcAp8ICAgICAgIGAtLSBuLWFyeVRyZWUuY3BwCmAtLSAyLiBBcmNoaXRlY3R1cmUKICAgIGAtLSBCZWhhdmlvcmFsX1BhdHRlcm4KCjE2IGRpcmVjdG9yaWVzLCA4OCBmaWxlcwpgYGAgIAoAAAAAAAAAAPoYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfQwAAAAAAAB9DAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAfQwAAAAAAAB9DAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA7AwAAAAAAADsDAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": " 1. Problems/1. Strings/2_Short_Encoding_of_Words.cpp                          \n#       renamed:    1_strings/3_Regular_Expression_Matching.cp                 \np -> 1. Problems/1. Strings/3_Regular_Expression_Matching.cpp                  \n#       renamed:    1_strings/3_Word_Break2.cpp -> 1. Problems                 \n/1. Strings/3_Word_Break2.cpp                                                  \n#       renamed:    7_PR/Array_Index_&_Element_Equality.cpp ->                 \n 1. Problems/1. Strings/Array_Index_&_Element_Equality.cpp                     \n#       renamed:    7_PR/Basic_Regex_Parser.cpp -> 1. Problems                 \n/1. Strings/Basic_Regex_Parser.cpp                                             \n#       renamed:    7_PR/Decrypt_Message.cpp -> 1. Problems/1.                 \n Strings/Decrypt_Message.cpp                                                   \n#       renamed:    7_PR/Word_Count_Engine.cpp -> 1. Problems/                 \n1. Strings/Word_Count_Engine.cpp                                               \n#       new file:   1. Problems/1. Strings/b. Best Substring -                 \n Longest Balanced Substring (Algo).py                                          \n#       new file:   1. Problems/1. Strings/b. Best Substring -                 \n Smallest Substring Containing (Algo).py                                       \nerror: There was a problem with the editor 'vi'.                               \nPlease supply the message using either -m or -F option.                        \nErics-MBP:code_journal erickim$                                                \n                                                                               \n",
			"settings":
			{
				"buffer_size": 1680,
				"line_ending": "Unix",
				"name": "Terminal (bash)",
				"read_only": true,
				"scratch": true
			},
			"undo_stack":
			[
				[
					614,
					1,
					"terminal_view_clear",
					{
						"start": 1300
					},
					"AQAAABQFAAAAAAAAFAUAAAAAAABBAAAAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAo",
					"AQAAAAAAAAABAAAA8wQAAAAAAADzBAAAAAAAAAAAAAAAAPC/"
				],
				[
					615,
					2,
					"terminal_view_update",
					null,
					"FQAAAAAAAAAAAAAAPwAAAAAAAABBAAAAIDEuIFByb2JsZW1zLzEuIFN0cmluZ3MvMl9TaG9ydF9FbmNvZGluZ19vZl9Xb3Jkcy5jcHAgICAgICAgICAgIAo/AAAAAAAAAH4AAAAAAAAAQQAAACMgICAgICAgcmVuYW1lZDogICAgMV9zdHJpbmdzLzNfUmVndWxhcl9FeHByZXNzaW9uX01hdGNoaW5nLmNwICAKfgAAAAAAAAC9AAAAAAAAAEEAAABwIC0+IDEuIFByb2JsZW1zLzEuIFN0cmluZ3MvM19SZWd1bGFyX0V4cHJlc3Npb25fTWF0Y2hpbmcuY3BwICAgCr0AAAAAAAAA/AAAAAAAAABBAAAAIyAgICAgICByZW5hbWVkOiAgICAxX3N0cmluZ3MvM19Xb3JkX0JyZWFrMi5jcHAgLT4gMS4gUHJvYmxlbXMgIAr8AAAAAAAAADsBAAAAAAAAQQAAAC8xLiBTdHJpbmdzLzNfV29yZF9CcmVhazIuY3BwICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKOwEAAAAAAAB6AQAAAAAAAEEAAAAjICAgICAgIHJlbmFtZWQ6ICAgIDdfUFIvQXJyYXlfSW5kZXhfJl9FbGVtZW50X0VxdWFsaXR5LmNwcCAtPiAgCnoBAAAAAAAAuQEAAAAAAABBAAAAIDEuIFByb2JsZW1zLzEuIFN0cmluZ3MvQXJyYXlfSW5kZXhfJl9FbGVtZW50X0VxdWFsaXR5LmNwcCAgICAgIAq5AQAAAAAAAPgBAAAAAAAAQQAAACMgICAgICAgcmVuYW1lZDogICAgN19QUi9CYXNpY19SZWdleF9QYXJzZXIuY3BwIC0+IDEuIFByb2JsZW1zICAK+AEAAAAAAAA3AgAAAAAAAEEAAAAvMS4gU3RyaW5ncy9CYXNpY19SZWdleF9QYXJzZXIuY3BwICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCjcCAAAAAAAAdgIAAAAAAABBAAAAIyAgICAgICByZW5hbWVkOiAgICA3X1BSL0RlY3J5cHRfTWVzc2FnZS5jcHAgLT4gMS4gUHJvYmxlbXMvMS4gIAp2AgAAAAAAALUCAAAAAAAAQQAAACBTdHJpbmdzL0RlY3J5cHRfTWVzc2FnZS5jcHAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKtQIAAAAAAAD0AgAAAAAAAEEAAAAjICAgICAgIHJlbmFtZWQ6ICAgIDdfUFIvV29yZF9Db3VudF9FbmdpbmUuY3BwIC0+IDEuIFByb2JsZW1zLyAgCvQCAAAAAAAAMwMAAAAAAABBAAAAMS4gU3RyaW5ncy9Xb3JkX0NvdW50X0VuZ2luZS5jcHAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAozAwAAAAAAAHIDAAAAAAAAQQAAACMgICAgICAgbmV3IGZpbGU6ICAgMS4gUHJvYmxlbXMvMS4gU3RyaW5ncy9iLiBCZXN0IFN1YnN0cmluZyAtICAKcgMAAAAAAACxAwAAAAAAAEEAAAAgTG9uZ2VzdCBCYWxhbmNlZCBTdWJzdHJpbmcgKEFsZ28pLnB5ICAgICAgICAgICAgICAgICAgICAgICAgICAgCrEDAAAAAAAA8AMAAAAAAABBAAAAIyAgICAgICBuZXcgZmlsZTogICAxLiBQcm9ibGVtcy8xLiBTdHJpbmdzL2IuIEJlc3QgU3Vic3RyaW5nIC0gIArwAwAAAAAAAC8EAAAAAAAAQQAAACBTbWFsbGVzdCBTdWJzdHJpbmcgQ29udGFpbmluZyAoQWxnbykucHkgICAgICAgICAgICAgICAgICAgICAgICAKLwQAAAAAAABuBAAAAAAAAEEAAABlcnJvcjogVGhlcmUgd2FzIGEgcHJvYmxlbSB3aXRoIHRoZSBlZGl0b3IgJ3ZpJy4gICAgICAgICAgICAgICAgCm4EAAAAAAAArQQAAAAAAABBAAAAUGxlYXNlIHN1cHBseSB0aGUgbWVzc2FnZSB1c2luZyBlaXRoZXIgLW0gb3IgLUYgb3B0aW9uLiAgICAgICAgIAqtBAAAAAAAAOwEAAAAAAAAQQAAAEVyaWNzLU1CUDpjb2RlX2pvdXJuYWwgZXJpY2tpbSQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAK7AQAAAAAAAArBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8wQAAAAAAADzBAAAAAAAAAAAAAAAAPC/"
				],
				[
					616,
					4,
					"terminal_view_update",
					null,
					"",
					"AQAAAAAAAAABAAAAzQQAAAAAAADNBAAAAAAAAAAAAAAAAPC/"
				],
				[
					617,
					20,
					"terminal_view_update",
					null,
					"",
					"AQAAAAAAAAABAAAAuwYAAAAAAAC7BgAAAAAAAAAAAAAAAPC/"
				],
				[
					618,
					1,
					"terminal_view_clear",
					{
						"start": 2180
					},
					"AQAAAIQIAAAAAAAAhAgAAAAAAABtAAAAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCg",
					"AQAAAAAAAAABAAAANwgAAAAAAAA3CAAAAAAAAAAAAAAAAPC/"
				],
				[
					619,
					4,
					"terminal_view_update",
					null,
					"",
					"AQAAAAAAAAABAAAANwgAAAAAAAA3CAAAAAAAAAAAAAAAAPC/"
				],
				[
					620,
					1,
					"terminal_view_clear",
					{
						"start": 2060
					},
					"AQAAAAwIAAAAAAAADAgAAAAAAABnAAAAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCg",
					"AQAAAAAAAAABAAAAxQcAAAAAAADFBwAAAAAAAAAAAAAAAPC/"
				],
				[
					621,
					2,
					"terminal_view_update",
					null,
					"FQAAAAAAAAAAAAAAZgAAAAAAAABnAAAAIDEuIFByb2JsZW1zLzEuIFN0cmluZ3MvMl9TaG9ydF9FbmNvZGluZ19vZl9Xb3Jkcy5jcHAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCmYAAAAAAAAAzAAAAAAAAABnAAAAIyAgICAgICByZW5hbWVkOiAgICAxX3N0cmluZ3MvM19SZWd1bGFyX0V4cHJlc3Npb25fTWF0Y2hpbmcuY3AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCswAAAAAAAAAMgEAAAAAAABnAAAAcCAtPiAxLiBQcm9ibGVtcy8xLiBTdHJpbmdzLzNfUmVndWxhcl9FeHByZXNzaW9uX01hdGNoaW5nLmNwcCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCjIBAAAAAAAAmAEAAAAAAABnAAAAIyAgICAgICByZW5hbWVkOiAgICAxX3N0cmluZ3MvM19Xb3JkX0JyZWFrMi5jcHAgLT4gMS4gUHJvYmxlbXMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCpgBAAAAAAAA/gEAAAAAAABnAAAALzEuIFN0cmluZ3MvM19Xb3JkX0JyZWFrMi5jcHAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCv4BAAAAAAAAZAIAAAAAAABnAAAAIyAgICAgICByZW5hbWVkOiAgICA3X1BSL0FycmF5X0luZGV4XyZfRWxlbWVudF9FcXVhbGl0eS5jcHAgLT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCmQCAAAAAAAAygIAAAAAAABnAAAAIDEuIFByb2JsZW1zLzEuIFN0cmluZ3MvQXJyYXlfSW5kZXhfJl9FbGVtZW50X0VxdWFsaXR5LmNwcCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCsoCAAAAAAAAMAMAAAAAAABnAAAAIyAgICAgICByZW5hbWVkOiAgICA3X1BSL0Jhc2ljX1JlZ2V4X1BhcnNlci5jcHAgLT4gMS4gUHJvYmxlbXMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCjADAAAAAAAAlgMAAAAAAABnAAAALzEuIFN0cmluZ3MvQmFzaWNfUmVnZXhfUGFyc2VyLmNwcCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCpYDAAAAAAAA/AMAAAAAAABnAAAAIyAgICAgICByZW5hbWVkOiAgICA3X1BSL0RlY3J5cHRfTWVzc2FnZS5jcHAgLT4gMS4gUHJvYmxlbXMvMS4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCvwDAAAAAAAAYgQAAAAAAABnAAAAIFN0cmluZ3MvRGVjcnlwdF9NZXNzYWdlLmNwcCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCmIEAAAAAAAAyAQAAAAAAABnAAAAIyAgICAgICByZW5hbWVkOiAgICA3X1BSL1dvcmRfQ291bnRfRW5naW5lLmNwcCAtPiAxLiBQcm9ibGVtcy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCsgEAAAAAAAALgUAAAAAAABnAAAAMS4gU3RyaW5ncy9Xb3JkX0NvdW50X0VuZ2luZS5jcHAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCi4FAAAAAAAAlAUAAAAAAABnAAAAIyAgICAgICBuZXcgZmlsZTogICAxLiBQcm9ibGVtcy8xLiBTdHJpbmdzL2IuIEJlc3QgU3Vic3RyaW5nIC0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCpQFAAAAAAAA+gUAAAAAAABnAAAAIExvbmdlc3QgQmFsYW5jZWQgU3Vic3RyaW5nIChBbGdvKS5weSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCvoFAAAAAAAAYAYAAAAAAABnAAAAIyAgICAgICBuZXcgZmlsZTogICAxLiBQcm9ibGVtcy8xLiBTdHJpbmdzL2IuIEJlc3QgU3Vic3RyaW5nIC0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCmAGAAAAAAAAxgYAAAAAAABnAAAAIFNtYWxsZXN0IFN1YnN0cmluZyBDb250YWluaW5nIChBbGdvKS5weSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCsYGAAAAAAAALAcAAAAAAABnAAAAZXJyb3I6IFRoZXJlIHdhcyBhIHByb2JsZW0gd2l0aCB0aGUgZWRpdG9yICd2aScuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiwHAAAAAAAAkgcAAAAAAABnAAAAUGxlYXNlIHN1cHBseSB0aGUgbWVzc2FnZSB1c2luZyBlaXRoZXIgLW0gb3IgLUYgb3B0aW9uLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCpIHAAAAAAAA+AcAAAAAAABnAAAARXJpY3MtTUJQOmNvZGVfam91cm5hbCBlcmlja2ltJCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCvgHAAAAAAAAXggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxQcAAAAAAADFBwAAAAAAAAAAAAAAAPC/"
				],
				[
					622,
					1,
					"terminal_view_clear",
					{
						"start": 2040
					},
					"AQAAAPgHAAAAAAAA+AcAAAAAAABmAAAAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAK",
					"AQAAAAAAAAABAAAAsgcAAAAAAACyBwAAAAAAAAAAAAAAAPC/"
				],
				[
					623,
					2,
					"terminal_view_update",
					null,
					"FQAAAAAAAAAAAAAAZQAAAAAAAABmAAAAIDEuIFByb2JsZW1zLzEuIFN0cmluZ3MvMl9TaG9ydF9FbmNvZGluZ19vZl9Xb3Jkcy5jcHAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKZQAAAAAAAADKAAAAAAAAAGYAAAAjICAgICAgIHJlbmFtZWQ6ICAgIDFfc3RyaW5ncy8zX1JlZ3VsYXJfRXhwcmVzc2lvbl9NYXRjaGluZy5jcCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIArKAAAAAAAAAC8BAAAAAAAAZgAAAHAgLT4gMS4gUHJvYmxlbXMvMS4gU3RyaW5ncy8zX1JlZ3VsYXJfRXhwcmVzc2lvbl9NYXRjaGluZy5jcHAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCi8BAAAAAAAAlAEAAAAAAABmAAAAIyAgICAgICByZW5hbWVkOiAgICAxX3N0cmluZ3MvM19Xb3JkX0JyZWFrMi5jcHAgLT4gMS4gUHJvYmxlbXMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKlAEAAAAAAAD5AQAAAAAAAGYAAAAvMS4gU3RyaW5ncy8zX1dvcmRfQnJlYWsyLmNwcCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAr5AQAAAAAAAF4CAAAAAAAAZgAAACMgICAgICAgcmVuYW1lZDogICAgN19QUi9BcnJheV9JbmRleF8mX0VsZW1lbnRfRXF1YWxpdHkuY3BwIC0+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCl4CAAAAAAAAwwIAAAAAAABmAAAAIDEuIFByb2JsZW1zLzEuIFN0cmluZ3MvQXJyYXlfSW5kZXhfJl9FbGVtZW50X0VxdWFsaXR5LmNwcCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKwwIAAAAAAAAoAwAAAAAAAGYAAAAjICAgICAgIHJlbmFtZWQ6ICAgIDdfUFIvQmFzaWNfUmVnZXhfUGFyc2VyLmNwcCAtPiAxLiBQcm9ibGVtcyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAooAwAAAAAAAI0DAAAAAAAAZgAAAC8xLiBTdHJpbmdzL0Jhc2ljX1JlZ2V4X1BhcnNlci5jcHAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCo0DAAAAAAAA8gMAAAAAAABmAAAAIyAgICAgICByZW5hbWVkOiAgICA3X1BSL0RlY3J5cHRfTWVzc2FnZS5jcHAgLT4gMS4gUHJvYmxlbXMvMS4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAK8gMAAAAAAABXBAAAAAAAAGYAAAAgU3RyaW5ncy9EZWNyeXB0X01lc3NhZ2UuY3BwICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIApXBAAAAAAAALwEAAAAAAAAZgAAACMgICAgICAgcmVuYW1lZDogICAgN19QUi9Xb3JkX0NvdW50X0VuZ2luZS5jcHAgLT4gMS4gUHJvYmxlbXMvICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCrwEAAAAAAAAIQUAAAAAAABmAAAAMS4gU3RyaW5ncy9Xb3JkX0NvdW50X0VuZ2luZS5jcHAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKIQUAAAAAAACGBQAAAAAAAGYAAAAjICAgICAgIG5ldyBmaWxlOiAgIDEuIFByb2JsZW1zLzEuIFN0cmluZ3MvYi4gQmVzdCBTdWJzdHJpbmcgLSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAqGBQAAAAAAAOsFAAAAAAAAZgAAACBMb25nZXN0IEJhbGFuY2VkIFN1YnN0cmluZyAoQWxnbykucHkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCusFAAAAAAAAUAYAAAAAAABmAAAAIyAgICAgICBuZXcgZmlsZTogICAxLiBQcm9ibGVtcy8xLiBTdHJpbmdzL2IuIEJlc3QgU3Vic3RyaW5nIC0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKUAYAAAAAAAC1BgAAAAAAAGYAAAAgU21hbGxlc3QgU3Vic3RyaW5nIENvbnRhaW5pbmcgKEFsZ28pLnB5ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAq1BgAAAAAAABoHAAAAAAAAZgAAAGVycm9yOiBUaGVyZSB3YXMgYSBwcm9ibGVtIHdpdGggdGhlIGVkaXRvciAndmknLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgChoHAAAAAAAAfwcAAAAAAABmAAAAUGxlYXNlIHN1cHBseSB0aGUgbWVzc2FnZSB1c2luZyBlaXRoZXIgLW0gb3IgLUYgb3B0aW9uLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKfwcAAAAAAADkBwAAAAAAAGYAAABFcmljcy1NQlA6Y29kZV9qb3VybmFsIGVyaWNraW0kICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIArkBwAAAAAAAEkIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsgcAAAAAAACyBwAAAAAAAAAAAAAAAPC/"
				],
				[
					624,
					1,
					"terminal_view_clear",
					{
						"start": 2020
					},
					"AQAAAOQHAAAAAAAA5AcAAAAAAABlAAAAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAo",
					"AQAAAAAAAAABAAAAnwcAAAAAAACfBwAAAAAAAAAAAAAAAPC/"
				],
				[
					625,
					2,
					"terminal_view_update",
					null,
					"FQAAAAAAAAAAAAAAZAAAAAAAAABlAAAAIDEuIFByb2JsZW1zLzEuIFN0cmluZ3MvMl9TaG9ydF9FbmNvZGluZ19vZl9Xb3Jkcy5jcHAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIApkAAAAAAAAAMgAAAAAAAAAZQAAACMgICAgICAgcmVuYW1lZDogICAgMV9zdHJpbmdzLzNfUmVndWxhcl9FeHByZXNzaW9uX01hdGNoaW5nLmNwICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKyAAAAAAAAAAsAQAAAAAAAGUAAABwIC0+IDEuIFByb2JsZW1zLzEuIFN0cmluZ3MvM19SZWd1bGFyX0V4cHJlc3Npb25fTWF0Y2hpbmcuY3BwICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiwBAAAAAAAAkAEAAAAAAABlAAAAIyAgICAgICByZW5hbWVkOiAgICAxX3N0cmluZ3MvM19Xb3JkX0JyZWFrMi5jcHAgLT4gMS4gUHJvYmxlbXMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAqQAQAAAAAAAPQBAAAAAAAAZQAAAC8xLiBTdHJpbmdzLzNfV29yZF9CcmVhazIuY3BwICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAK9AEAAAAAAABYAgAAAAAAAGUAAAAjICAgICAgIHJlbmFtZWQ6ICAgIDdfUFIvQXJyYXlfSW5kZXhfJl9FbGVtZW50X0VxdWFsaXR5LmNwcCAtPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgClgCAAAAAAAAvAIAAAAAAABlAAAAIDEuIFByb2JsZW1zLzEuIFN0cmluZ3MvQXJyYXlfSW5kZXhfJl9FbGVtZW50X0VxdWFsaXR5LmNwcCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAq8AgAAAAAAACADAAAAAAAAZQAAACMgICAgICAgcmVuYW1lZDogICAgN19QUi9CYXNpY19SZWdleF9QYXJzZXIuY3BwIC0+IDEuIFByb2JsZW1zICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKIAMAAAAAAACEAwAAAAAAAGUAAAAvMS4gU3RyaW5ncy9CYXNpY19SZWdleF9QYXJzZXIuY3BwICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCoQDAAAAAAAA6AMAAAAAAABlAAAAIyAgICAgICByZW5hbWVkOiAgICA3X1BSL0RlY3J5cHRfTWVzc2FnZS5jcHAgLT4gMS4gUHJvYmxlbXMvMS4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAroAwAAAAAAAEwEAAAAAAAAZQAAACBTdHJpbmdzL0RlY3J5cHRfTWVzc2FnZS5jcHAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKTAQAAAAAAACwBAAAAAAAAGUAAAAjICAgICAgIHJlbmFtZWQ6ICAgIDdfUFIvV29yZF9Db3VudF9FbmdpbmUuY3BwIC0+IDEuIFByb2JsZW1zLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCrAEAAAAAAAAFAUAAAAAAABlAAAAMS4gU3RyaW5ncy9Xb3JkX0NvdW50X0VuZ2luZS5jcHAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoUBQAAAAAAAHgFAAAAAAAAZQAAACMgICAgICAgbmV3IGZpbGU6ICAgMS4gUHJvYmxlbXMvMS4gU3RyaW5ncy9iLiBCZXN0IFN1YnN0cmluZyAtICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKeAUAAAAAAADcBQAAAAAAAGUAAAAgTG9uZ2VzdCBCYWxhbmNlZCBTdWJzdHJpbmcgKEFsZ28pLnB5ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCtwFAAAAAAAAQAYAAAAAAABlAAAAIyAgICAgICBuZXcgZmlsZTogICAxLiBQcm9ibGVtcy8xLiBTdHJpbmdzL2IuIEJlc3QgU3Vic3RyaW5nIC0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIApABgAAAAAAAKQGAAAAAAAAZQAAACBTbWFsbGVzdCBTdWJzdHJpbmcgQ29udGFpbmluZyAoQWxnbykucHkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKpAYAAAAAAAAIBwAAAAAAAGUAAABlcnJvcjogVGhlcmUgd2FzIGEgcHJvYmxlbSB3aXRoIHRoZSBlZGl0b3IgJ3ZpJy4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCggHAAAAAAAAbAcAAAAAAABlAAAAUGxlYXNlIHN1cHBseSB0aGUgbWVzc2FnZSB1c2luZyBlaXRoZXIgLW0gb3IgLUYgb3B0aW9uLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIApsBwAAAAAAANAHAAAAAAAAZQAAAEVyaWNzLU1CUDpjb2RlX2pvdXJuYWwgZXJpY2tpbSQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAK0AcAAAAAAAA0CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnwcAAAAAAACfBwAAAAAAAAAAAAAAAPC/"
				],
				[
					626,
					1,
					"terminal_view_clear",
					{
						"start": 2000
					},
					"AQAAANAHAAAAAAAA0AcAAAAAAABkAAAAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCg",
					"AQAAAAAAAAABAAAAjAcAAAAAAACMBwAAAAAAAAAAAAAAAPC/"
				],
				[
					627,
					2,
					"terminal_view_update",
					null,
					"FQAAAAAAAAAAAAAAYwAAAAAAAABkAAAAIDEuIFByb2JsZW1zLzEuIFN0cmluZ3MvMl9TaG9ydF9FbmNvZGluZ19vZl9Xb3Jkcy5jcHAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCmMAAAAAAAAAxgAAAAAAAABkAAAAIyAgICAgICByZW5hbWVkOiAgICAxX3N0cmluZ3MvM19SZWd1bGFyX0V4cHJlc3Npb25fTWF0Y2hpbmcuY3AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCsYAAAAAAAAAKQEAAAAAAABkAAAAcCAtPiAxLiBQcm9ibGVtcy8xLiBTdHJpbmdzLzNfUmVndWxhcl9FeHByZXNzaW9uX01hdGNoaW5nLmNwcCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCikBAAAAAAAAjAEAAAAAAABkAAAAIyAgICAgICByZW5hbWVkOiAgICAxX3N0cmluZ3MvM19Xb3JkX0JyZWFrMi5jcHAgLT4gMS4gUHJvYmxlbXMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCowBAAAAAAAA7wEAAAAAAABkAAAALzEuIFN0cmluZ3MvM19Xb3JkX0JyZWFrMi5jcHAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCu8BAAAAAAAAUgIAAAAAAABkAAAAIyAgICAgICByZW5hbWVkOiAgICA3X1BSL0FycmF5X0luZGV4XyZfRWxlbWVudF9FcXVhbGl0eS5jcHAgLT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgClICAAAAAAAAtQIAAAAAAABkAAAAIDEuIFByb2JsZW1zLzEuIFN0cmluZ3MvQXJyYXlfSW5kZXhfJl9FbGVtZW50X0VxdWFsaXR5LmNwcCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCrUCAAAAAAAAGAMAAAAAAABkAAAAIyAgICAgICByZW5hbWVkOiAgICA3X1BSL0Jhc2ljX1JlZ2V4X1BhcnNlci5jcHAgLT4gMS4gUHJvYmxlbXMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgChgDAAAAAAAAewMAAAAAAABkAAAALzEuIFN0cmluZ3MvQmFzaWNfUmVnZXhfUGFyc2VyLmNwcCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCnsDAAAAAAAA3gMAAAAAAABkAAAAIyAgICAgICByZW5hbWVkOiAgICA3X1BSL0RlY3J5cHRfTWVzc2FnZS5jcHAgLT4gMS4gUHJvYmxlbXMvMS4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCt4DAAAAAAAAQQQAAAAAAABkAAAAIFN0cmluZ3MvRGVjcnlwdF9NZXNzYWdlLmNwcCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCkEEAAAAAAAApAQAAAAAAABkAAAAIyAgICAgICByZW5hbWVkOiAgICA3X1BSL1dvcmRfQ291bnRfRW5naW5lLmNwcCAtPiAxLiBQcm9ibGVtcy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCqQEAAAAAAAABwUAAAAAAABkAAAAMS4gU3RyaW5ncy9Xb3JkX0NvdW50X0VuZ2luZS5jcHAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCgcFAAAAAAAAagUAAAAAAABkAAAAIyAgICAgICBuZXcgZmlsZTogICAxLiBQcm9ibGVtcy8xLiBTdHJpbmdzL2IuIEJlc3QgU3Vic3RyaW5nIC0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCmoFAAAAAAAAzQUAAAAAAABkAAAAIExvbmdlc3QgQmFsYW5jZWQgU3Vic3RyaW5nIChBbGdvKS5weSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCs0FAAAAAAAAMAYAAAAAAABkAAAAIyAgICAgICBuZXcgZmlsZTogICAxLiBQcm9ibGVtcy8xLiBTdHJpbmdzL2IuIEJlc3QgU3Vic3RyaW5nIC0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCjAGAAAAAAAAkwYAAAAAAABkAAAAIFNtYWxsZXN0IFN1YnN0cmluZyBDb250YWluaW5nIChBbGdvKS5weSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCpMGAAAAAAAA9gYAAAAAAABkAAAAZXJyb3I6IFRoZXJlIHdhcyBhIHByb2JsZW0gd2l0aCB0aGUgZWRpdG9yICd2aScuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCvYGAAAAAAAAWQcAAAAAAABkAAAAUGxlYXNlIHN1cHBseSB0aGUgbWVzc2FnZSB1c2luZyBlaXRoZXIgLW0gb3IgLUYgb3B0aW9uLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgClkHAAAAAAAAvAcAAAAAAABkAAAARXJpY3MtTUJQOmNvZGVfam91cm5hbCBlcmlja2ltJCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCrwHAAAAAAAAHwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjAcAAAAAAACMBwAAAAAAAAAAAAAAAPC/"
				],
				[
					628,
					1,
					"terminal_view_clear",
					{
						"start": 1980
					},
					"AQAAALwHAAAAAAAAvAcAAAAAAABjAAAAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAK",
					"AQAAAAAAAAABAAAAeQcAAAAAAAB5BwAAAAAAAAAAAAAAAPC/"
				],
				[
					629,
					8,
					"terminal_view_update",
					null,
					"",
					"AQAAAAAAAAABAAAAeQcAAAAAAAB5BwAAAAAAAAAAAAAAAPC/"
				],
				[
					630,
					1,
					"terminal_view_clear",
					{
						"start": 1620
					},
					"AQAAAFQGAAAAAAAAVAYAAAAAAABRAAAAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAK",
					"AQAAAAAAAAABAAAAIwYAAAAAAAAjBgAAAAAAAAAAAAAAAPC/"
				],
				[
					631,
					2,
					"terminal_view_update",
					null,
					"FQAAAAAAAAAAAAAAUAAAAAAAAABRAAAAIDEuIFByb2JsZW1zLzEuIFN0cmluZ3MvMl9TaG9ydF9FbmNvZGluZ19vZl9Xb3Jkcy5jcHAgICAgICAgICAgICAgICAgICAgICAgICAgICAKUAAAAAAAAACgAAAAAAAAAFEAAAAjICAgICAgIHJlbmFtZWQ6ICAgIDFfc3RyaW5ncy8zX1JlZ3VsYXJfRXhwcmVzc2lvbl9NYXRjaGluZy5jcCAgICAgICAgICAgICAgICAgIAqgAAAAAAAAAPAAAAAAAAAAUQAAAHAgLT4gMS4gUHJvYmxlbXMvMS4gU3RyaW5ncy8zX1JlZ3VsYXJfRXhwcmVzc2lvbl9NYXRjaGluZy5jcHAgICAgICAgICAgICAgICAgICAgCvAAAAAAAAAAQAEAAAAAAABRAAAAIyAgICAgICByZW5hbWVkOiAgICAxX3N0cmluZ3MvM19Xb3JkX0JyZWFrMi5jcHAgLT4gMS4gUHJvYmxlbXMgICAgICAgICAgICAgICAgICAKQAEAAAAAAACQAQAAAAAAAFEAAAAvMS4gU3RyaW5ncy8zX1dvcmRfQnJlYWsyLmNwcCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAqQAQAAAAAAAOABAAAAAAAAUQAAACMgICAgICAgcmVuYW1lZDogICAgN19QUi9BcnJheV9JbmRleF8mX0VsZW1lbnRfRXF1YWxpdHkuY3BwIC0+ICAgICAgICAgICAgICAgICAgCuABAAAAAAAAMAIAAAAAAABRAAAAIDEuIFByb2JsZW1zLzEuIFN0cmluZ3MvQXJyYXlfSW5kZXhfJl9FbGVtZW50X0VxdWFsaXR5LmNwcCAgICAgICAgICAgICAgICAgICAgICAKMAIAAAAAAACAAgAAAAAAAFEAAAAjICAgICAgIHJlbmFtZWQ6ICAgIDdfUFIvQmFzaWNfUmVnZXhfUGFyc2VyLmNwcCAtPiAxLiBQcm9ibGVtcyAgICAgICAgICAgICAgICAgIAqAAgAAAAAAANACAAAAAAAAUQAAAC8xLiBTdHJpbmdzL0Jhc2ljX1JlZ2V4X1BhcnNlci5jcHAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCtACAAAAAAAAIAMAAAAAAABRAAAAIyAgICAgICByZW5hbWVkOiAgICA3X1BSL0RlY3J5cHRfTWVzc2FnZS5jcHAgLT4gMS4gUHJvYmxlbXMvMS4gICAgICAgICAgICAgICAgICAKIAMAAAAAAABwAwAAAAAAAFEAAAAgU3RyaW5ncy9EZWNyeXB0X01lc3NhZ2UuY3BwICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIApwAwAAAAAAAMADAAAAAAAAUQAAACMgICAgICAgcmVuYW1lZDogICAgN19QUi9Xb3JkX0NvdW50X0VuZ2luZS5jcHAgLT4gMS4gUHJvYmxlbXMvICAgICAgICAgICAgICAgICAgCsADAAAAAAAAEAQAAAAAAABRAAAAMS4gU3RyaW5ncy9Xb3JkX0NvdW50X0VuZ2luZS5jcHAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKEAQAAAAAAABgBAAAAAAAAFEAAAAjICAgICAgIG5ldyBmaWxlOiAgIDEuIFByb2JsZW1zLzEuIFN0cmluZ3MvYi4gQmVzdCBTdWJzdHJpbmcgLSAgICAgICAgICAgICAgICAgIApgBAAAAAAAALAEAAAAAAAAUQAAACBMb25nZXN0IEJhbGFuY2VkIFN1YnN0cmluZyAoQWxnbykucHkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCrAEAAAAAAAAAAUAAAAAAABRAAAAIyAgICAgICBuZXcgZmlsZTogICAxLiBQcm9ibGVtcy8xLiBTdHJpbmdzL2IuIEJlc3QgU3Vic3RyaW5nIC0gICAgICAgICAgICAgICAgICAKAAUAAAAAAABQBQAAAAAAAFEAAAAgU21hbGxlc3QgU3Vic3RyaW5nIENvbnRhaW5pbmcgKEFsZ28pLnB5ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIApQBQAAAAAAAKAFAAAAAAAAUQAAAGVycm9yOiBUaGVyZSB3YXMgYSBwcm9ibGVtIHdpdGggdGhlIGVkaXRvciAndmknLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCqAFAAAAAAAA8AUAAAAAAABRAAAAUGxlYXNlIHN1cHBseSB0aGUgbWVzc2FnZSB1c2luZyBlaXRoZXIgLW0gb3IgLUYgb3B0aW9uLiAgICAgICAgICAgICAgICAgICAgICAgICAK8AUAAAAAAABABgAAAAAAAFEAAABFcmljcy1NQlA6Y29kZV9qb3VybmFsIGVyaWNraW0kICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIApABgAAAAAAAJAGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIwYAAAAAAAAjBgAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 87.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"terminal",
				"Terminal View: Open Bash Terminal"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"termi",
				"Terminal: Open"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"termin",
				"Terminal View: Open Bash Terminal"
			],
			[
				"markdown",
				"MarkdownLivePreview: Edit Current File"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"package",
				"Install Package Control"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/erickim/Desktop/git/code_journal",
		"/Users/erickim/Desktop/git/code_journal/1. Problems",
		"/Users/erickim/Desktop/git/code_journal/1. Problems/2. Array",
		"/Users/erickim/Desktop/git/code_journal/1. Problems/4. Trees",
		"/Users/erickim/Desktop/git/code_journal/1. Problems/9. Design",
		"/Users/erickim/Desktop/git/code_journal/2. Notes",
		"/Users/erickim/Desktop/git/code_journal/2. Notes/1. Templates",
		"/Users/erickim/Desktop/git/code_journal/3. Competition"
	],
	"file_history":
	[
		"/Users/erickim/Desktop/git/code_journal/1. Problems/8. Graphs/a. Union Find - Accounts Merge.py",
		"/Users/erickim/Desktop/git/code_journal/1. Problems/2. Array/a. 1D - Sequence - Jump Game II.py",
		"/Users/erickim/Desktop/git/code_journal/gen_md.sh",
		"/Users/erickim/Desktop/git/code_journal/readme.md",
		"/Users/erickim/Desktop/git/code_journal/.gitignore",
		"/Users/erickim/Desktop/git/code_journal/readme_header.md",
		"/Users/erickim/Desktop/git/code_journal/1. Problems/3. Linked List/0_Ordering.md",
		"/Users/erickim/Desktop/git/code_journal/1. Problems/1. Strings/0_Ordering.md",
		"/Users/erickim/Desktop/git/code_journal/1. Problems/2. Array/c. Bits - Hamming Distance.py",
		"/Users/erickim/Desktop/git/code_journal/1. Problems/9. Math/0_Ordering.md",
		"/Users/erickim/Desktop/git/code_journal/1. Problems/2. Array/0_Ordering.md",
		"/Users/erickim/Desktop/git/code_journal/1. Problems/5_others/1_Day_of_the_week.py",
		"/Users/erickim/Desktop/git/code_journal/1. Problems/5_others/1_1bit_and_2bit_Characters.py",
		"/Users/erickim/Desktop/git/code_journal/template.txt",
		"/Users/erickim/Desktop/git/code_journal/1_array/1_K_Weakest_Rows_in_Matrix.cpp",
		"/Users/erickim/Desktop/git/code_journal/1_array/0_Ordering.md",
		"/Users/erickim/Desktop/git/code_journal/1_array/c. Bits - Design BItset.py",
		"/Users/erickim/Desktop/git/code_journal/5_graphs/b. Graph Search - Bellman Ford - Detect Arbitrage (Algo).py",
		"/Users/erickim/Desktop/git/code_journal/5_graphs/b. Graph Search 2 - DFS - Airport Connectinos (Algo).py",
		"/Users/erickim/Desktop/git/code_journal/8_Template/design/LRU Cache (Algo).py",
		"/Users/erickim/Desktop/git/code_journal/1_linked_list/a. Manipulate - Rearrange Linked List (Algo).py",
		"/Users/erickim/Desktop/git/code_journal/1_linked_list/a. Manipulate - Zip Linked List (Algo).py",
		"/Users/erickim/Desktop/git/code_journal/1_linked_list/a. Binary Tree - Number of Binary Tree Topologies (Algo).py",
		"/Users/erickim/Desktop/git/code_journal/8_Template/sorting/Merge Sort.py",
		"/Users/erickim/Desktop/git/code_journal/2_sorting_searching/c. Sort - Merge Sort - Count Merge Sort (Algo).py",
		"/Users/erickim/Desktop/git/code_journal/1_strings/0_Ordering.md",
		"/Users/erickim/Desktop/git/code_journal/8_Template/linked_list/Linked List.py",
		"/Users/erickim/Desktop/git/code_journal/8_Template/tree/E. Trie - Suffix Trie.py",
		"/Users/erickim/Desktop/git/code_journal/8_Template/linked_list/Radix Sort.py",
		"/Users/erickim/Desktop/git/code_journal/1_strings/b. Best Substring - Longest Balanced Substring (Algo).py",
		"/Users/erickim/Desktop/git/code_journal/1_strings/b. Best Substring - Smallest Substring Containing (Algo).py",
		"/Users/erickim/Desktop/git/code_journal/1_linked_list/a. Manipulate - Node Swap (Algo).py",
		"/Users/erickim/Desktop/git/code_journal/8_Template/graph/a. UnionFind 3 - Rank.py",
		"/Users/erickim/Desktop/git/code_journal/5_graphs/b. Graph Search - Bridges in Graph - Two-Edge-Connected Graph (Algo).py",
		"/Users/erickim/Desktop/git/code_journal/8_Template/math/a. Karatsuba - Multiply Two Large Numbers.py",
		"/Users/erickim/Desktop/git/code_journal/2_trees/a. BinaryTree - Traversal - All Nodes Distance K in Binary Tree.py",
		"/Users/erickim/Desktop/git/code_journal/2_sorting_searching/0_Ordering.md",
		"/Users/erickim/Desktop/git/code_journal/2_trees/a. Binary Tree - Right Sibling Tree Mutated (Algo).py",
		"/Users/erickim/Desktop/git/code_journal/2_trees/a. Binary Tree - Traversal - Compare Leaf Traversal (Algo).py",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/b. 2D - Minimum Cuts for Partitioning Palindrome.py",
		"/Users/erickim/Desktop/git/code_journal/5_graphs/0_Ordering.md",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/b. 2D - Rectangle Mania (Algo).py",
		"/Users/erickim/Desktop/git/code_journal/5_graphs/b. Graph Search - A Star (Algo).py",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/b. 2D - Has Square of Zero Border (Algo).py",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/a. 1D - Longest String Chain (Algo).py",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/d. LIS - Longest Increasing Subsequence.py",
		"/Users/erickim/Desktop/git/code_journal/2_trees/a. Binary Tree - Populating Next Right Pointers in Each Node.py",
		"/Users/erickim/Desktop/git/code_journal/2_trees/a. Binary Tree - Flatten Binary Tree (Algo).py",
		"/Users/erickim/Desktop/git/code_journal/2_trees/b. BST - Right Smaller Than (Algo).py",
		"/Users/erickim/Desktop/git/code_journal/1_array/a. 1D - Stack - Shorten Path (Algo).py",
		"/Users/erickim/Desktop/git/code_journal/8_Template/graph/0_Ordering.md",
		"/Users/erickim/Desktop/git/code_journal/2_sorting_searching/a. 1D Binary Search - Search in Rotated Sorted Array.py",
		"/Users/erickim/Desktop/git/code_journal/2_trees/0_ORDERING.md",
		"/Users/erickim/Desktop/git/code_journal/8_Template/tree/0_Ordering.md",
		"/Users/erickim/Desktop/git/code_journal/8_Template/tree/c. Heap 2 - Heap Sort.py",
		"/Users/erickim/Desktop/git/code_journal/8_Template/graph/e. TopoSort 1 - DFS.py",
		"/Users/erickim/Desktop/git/code_journal/8_Template/graph/e. Toposort 2 - BFS.py",
		"/Users/erickim/Desktop/git/code_journal/1_linked_list/0_Ordering.md",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/c. LCS - Return longest string(Algo).py",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/c. LCS - Longest Common Subsequence.py",
		"/Users/erickim/Desktop/git/code_journal/8_Template/tree/binaryTree_Node.py",
		"/Users/erickim/Desktop/git/code_journal/2_trees/a. BinaryTree - Traversal - Validate Three Nodes (Algo).py",
		"/Users/erickim/Desktop/git/code_journal/8_Template/linked_list/doubly_linked_list.py",
		"/Users/erickim/Desktop/git/code_journal/8_Template/tree/heap.py",
		"/Users/erickim/Desktop/git/code_journal/8_Template/graph/a. UnionFind 1.py",
		"/Users/erickim/Desktop/git/code_journal/8_Template/tree/trie.py",
		"/Users/erickim/Desktop/git/code_journal/2_trees/a. BinaryTree - Traversal - Are Same BST (Algo).py",
		"/Users/erickim/Desktop/git/code_journal/8_Template/linked_list/reverse_linked_list.py",
		"/Users/erickim/Desktop/git/code_journal/1_linked_list/1_Reverse_Linked_List.cpp",
		"/Users/erickim/Desktop/git/code_journal/1_array/b. 1D - Sequence - Next Greater ELement (Algo).py",
		"/Users/erickim/Desktop/git/code_journal/2_trees/b. Heap - Top K Frequent Words.py",
		"/Users/erickim/Desktop/git/code_journal/8_Template/math/gcd.py",
		"/Users/erickim/Desktop/git/code_journal/2_trees/d. Trie - Search Suggestion System.py",
		"/Users/erickim/Desktop/git/code_journal/8_Template/graph/a. UnionFind 4 - Path Compression Rank.py",
		"/Users/erickim/Desktop/git/code_journal/8_Template/graph/b. DFS 1 - Clone a graph.py",
		"/Users/erickim/Desktop/git/code_journal/8_Template/stacks&queues/heap.py",
		"/Users/erickim/Desktop/git/code_journal/8_Template/graph/a. UnionFind 2 - Quick Find.py",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/a. 1D - Paint House 1.py",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/b. 2D - Interleaving String.py",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/b. Path - Unique Paths 1.py",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/a. Math - Number of Dice Rolls With Target Sum.py",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/a. 1D - Minimum Cost For Tickets.py",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/a. 1D - Paint House 3 - with already painted houses.py",
		"/Users/erickim/Desktop/git/code_journal/8_Template/debug/printMat.cpp",
		"/Users/erickim/Desktop/git/code_journal/8_Template/dp&hash/Kadane.pseudo",
		"/Users/erickim/Desktop/git/code_journal/8_Template/dp&hash/a. 1D - Maximum Length of Repeated Subarray.py",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/a. 1D - Paint House 2 - with color cost.py",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/a. 1D Coin Change 2 - Number of combinations for the amount.py",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/b. Path - Minimum Path Sum.py",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/b. Path - Unique Paths 2 - with obstacle.py",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/b. Path - Unique Paths.py",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/a. 1D Decode Ways.py",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/a. Kadane Maximum Sum Circular Subarray.py",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/d. LIS Longest Increasing Subsequence.py",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/a. 1D Paint Fence.py",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/h. Best Time Buy and Sell Stock 2 Multibuy.py",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/h. Best Time Buy and Sell Stock 3 Up to two buys.py",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/h. Best Time Buy and Sell Stock 4 Up to K buys.py",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/h. Best Time Buy and Sell Stock 5 Multibuy with 1 day cooldown.py",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/h. Best Time Buy and Sell Stock 6 Multibuy with transaction fee.py",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/a. 1D Climbing Stairs.py",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/e. Edit Distance.py",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/a. 1D Rod Cutting Problem.py",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/h. Best Time Buy and Sell Stock.py",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/g. Partition.py",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/f. Knapsack",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/a. 1D Word Break.py",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/b. 2D Maximal Square.py",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/a. 1D Coin Change.py",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/b. 2D Minimum Difficulty of a Job Schedule.py",
		"/Users/erickim/Desktop/git/code_journal/7_GCJ/2021/R1B/2_Subtransmutation.py",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/b. 2D Maximum Score from Performing Multiplication Operations.py",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/c. LCS Longest Common Subsequence.py",
		"/Users/erickim/Desktop/git/code_journal/3_dynamic_programming/a. 1D House Robber.py",
		"/Users/erickim/Desktop/git/code_journal/7_Interviews/Google/2021/Q1.py",
		"/Users/erickim/Desktop/git/code_journal/7_Interviews/Google/2021/Q4.py",
		"/Users/erickim/Desktop/git/code_journal/7_Interviews/Google/2021/Q3.py",
		"/Users/erickim/Desktop/git/code_journal/7_Interviews/Google/2021/Q5.doc",
		"/Users/erickim/Desktop/git/code_journal/7_Interviews/Google/2021/Q2",
		"/Users/erickim/Desktop/git/code_journal/7_Interviews/Google/Q2",
		"/Users/erickim/Desktop/git/code_journal/7_GCJ/2021/R1B/3_DigitBlocks.py",
		"/Users/erickim/Desktop/git/code_journal/7_GCJ/2021/R1B/3_testing_tool.py",
		"/Users/erickim/Desktop/git/code_journal/7_GCJ/2021/R1B/1_BrokenClock.py",
		"/Users/erickim/Desktop/git/code_journal/7_GCJ/2021/R1B/1_0in.txt",
		"/Users/erickim/Desktop/git/code_journal/jam.sh",
		"/Users/erickim/Desktop/git/code_journal/7_GCJ/2021/R1A/3_0out.txt",
		"/Users/erickim/Desktop/git/code_journal/7_GCJ/2021/R1B/1_0out.txt",
		"/Users/erickim/Desktop/git/code_journal/7_GCJ/2021/R1B/3_0out.txt"
	],
	"find":
	{
		"height": 24.0
	},
	"find_in_files":
	{
		"height": 101.0,
		"where_history":
		[
			".,/Users/eric/Desktop/git/code_journal",
			".",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"3723",
			"147",
			"A",
			"WRONG_ORDER_ERROR",
			"line",
			"Output",
			"failed",
			"referenced before",
			"index",
			"INVALID_LINE_ERROR",
			"Tester script does not exist, rename to 4_tester.py",
			"CASE",
			"Topological",
			"largestRectangleArea",
			"Split_Array_Larges",
			"Split_Array_Largest",
			"LRD",
			"LDR",
			"DLR",
			"ClosestInDictionary",
			"emplace_B"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"postOrder",
			"inOrder",
			"preOrder"
		],
		"reverse": true,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "1. Problems/2. Array/a. 1D - Sum - Maxiumum Product Subarray.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1081,
						"regions":
						{
						},
						"selection":
						[
							[
								823,
								823
							]
						],
						"settings":
						{
							"auto_name": "a. 1D - Sum - Maxiumum Product Subarray",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 68.5,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "1. Problems/4. Trees/a. Binary Tree - Traversal - Convert BST to Sorted Doubly LL.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1955,
						"regions":
						{
						},
						"selection":
						[
							[
								1281,
								1281
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 348.5,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "1. Problems/9. Design/a. Stack - Design Browser History.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3508,
						"regions":
						{
						},
						"selection":
						[
							[
								3508,
								3508
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "1. Problems/9. Design/0. Ordering.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 25,
						"regions":
						{
						},
						"selection":
						[
							[
								25,
								25
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "1. Problems/2. Array/1_Island_Perimeter.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1458,
						"regions":
						{
						},
						"selection":
						[
							[
								1458,
								1458
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 373.5,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "1. Problems/2. Array/1_K_Weakest_Rows_in_Matrix.cpp",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1836,
						"regions":
						{
						},
						"selection":
						[
							[
								1365,
								1365
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 6,
					"file": "readme.md",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15361,
						"regions":
						{
						},
						"selection":
						[
							[
								305,
								305
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2550.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 7,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1680,
						"regions":
						{
						},
						"selection":
						[
							[
								1552,
								1552
							]
						],
						"settings":
						{
							"auto_complete": false,
							"auto_complete_commit_on_tab": false,
							"caret_style": "blink",
							"color_scheme": "Packages/TerminalView/TerminalView.hidden-tmTheme",
							"draw_centered": false,
							"draw_indent_guides": false,
							"draw_white_space": "none",
							"gutter": false,
							"highlight_line": false,
							"scroll_past_end": false,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"terminal_view": true,
							"terminal_view_activate_args":
							{
								"cmd": "/bin/bash -l",
								"cwd": "/Users/erickim/Desktop/git/code_journal",
								"keep_open": false,
								"syntax": null,
								"title": "Terminal (bash)"
							},
							"terminal_view_last_cursor_pos":
							[
								19,
								32
							],
							"word_wrap": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 38.0
	},
	"input":
	{
		"height": 38.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			],
			[
				0,
				1,
				1,
				2
			],
			[
				1,
				1,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.773635646206,
			1.0
		],
		"rows":
		[
			0.0,
			0.573189626439,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Python/Python.sublime-build",
	"project": "cj.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Desktop/git/code_journal/cj.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 490.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
